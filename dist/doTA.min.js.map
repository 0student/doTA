{"version":3,"sources":["doTA.js"],"names":["doTA","V","t","f","e","d","indexOf","charAt","closeTag","substring","comment","c","k","a","m","l","E","h","b","slice","length","replace","toLowerCase","openTag","voidTag","text","W","X","toUpperCase","K","console","error","document","getElementById","substr","setAttribute","String","prototype","trim","this","Object","watch","unwatch","D","A","n","B","createElement","Y","Z","aa","ba","ca","da","ea","U","fa","I","G","M","diff","H","firstChild","nodeType","nodeValue","diff2","lastIndexOf","innerHTML","parentNode","replaceChild","insertBefore","createTextNode","appendChild","diff3","w","C","p","L","removeChild","getId","initCH","compile","match","F","push","g","J","S","N","loose","watchDiff","diffLevel","$index","undefined","$attr","Math","Date","Array","Infinity","NaN","var","in","true","false","null","void","z","v","R","dotaRender","T","strip","encode",">","<","r","u","q","skip","O","P","x","Q","y","key","refresh","elif","exec","style","model","bind","value","test","event","id","expand","join","optimize","debug","log","Function","PS","module","exports","noop","time","timeEnd"],"mappings":"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","file":"doTA.min.js","sourcesContent":["var doTA = (function() {'use strict';\n  // var msie = (typeof document !== 'undefined' && document.documentMode) ||\n  //   (typeof navigator !== 'undefined' && /Edge/.test(navigator.userAgent) && 12);\n\n  /* for ie8 */\n  if (!String.prototype.trim) {\n    String.prototype.trim = function() {\n      return this.replace(/^\\s+|\\s+$/g,'');\n    };\n  }\n\n  /* no, thanks! firefox */\n  if (Object.prototype.watch) {\n    delete Object.prototype.watch;\n    delete Object.prototype.unwatch;\n  }\n\n  // pretty indent for debugging\n  function indent(n, x) {\n    var ret = new Array(n + 2).join('    ');\n    return x ? ret.slice(0, -2 * x) : ret;\n  }\n\n  // function forEachArray(src, iter, ctx) {\n  //   if (!src) { return; }\n  //   if (src.forEach) {\n  //     return src.forEach(iter);\n  //   }\n  //   for (var key = 0, length = src.length; key < length; key++) {\n  //     iter.call(ctx, src[key], key);\n  //   }\n  // }\n\n  // decode html entities\n  function decodeEntities(text) {\n    return text.indexOf('&') < 0 ? text : text\n      .replace(/&gt;/g, '>').replace(/&lt;/g, '<')\n      .replace(/&amp;/g, '&').replace(/&quot;/g, '\"');\n  }\n\n  // parse attributes from html open tag and make dict object\n  function parseAttr(chunk, func) {\n    var attr = {}, tagName;\n    var pos = chunk.indexOf(' ');\n    var spPos;\n    var len, attrName, attrVal;\n    var valStart, valEndPos;\n\n    if (pos !== -1) {\n      tagName = chunk.slice(0, pos);\n      len = chunk.length;\n\n      //console.log(222, [pos, chunk]);\n      while (++pos < len) {\n        var eqPos = chunk.indexOf('=', pos);\n        // console.log('chunk', [chunk, pos, eqPos, chunk.slice(pos)]);\n\n        // ** attribute without value (last attribute) **\n        if (eqPos === -1) {\n          do {\n            spPos = chunk.indexOf(' ', pos);\n            if (spPos > 0) {\n              attrName = chunk.slice(pos, spPos);\n            } else {\n              attrName = chunk.slice(pos);\n            }\n            // console.log('eqPos === -1', [attrName, pos, chunk])\n            if (attrName !== '/') {\n              attr[attrName] = '';\n            }\n            pos = spPos + 1;\n\n          } while (spPos > 0);\n          //attr required will be required=\"\", while is valid syntax\n          //http://www.w3.org/TR/html-markup/syntax.html#syntax-attr-empty\n          break;\n        }\n\n\n        spPos = chunk.indexOf(' ', pos);\n        // console.log('chunk', [chunk, eqPos, pos, spPos, chunk.slice(pos, spPos)]);\n\n        if (spPos > 0 && spPos < eqPos) {\n          attr[chunk.slice(pos, spPos)] = \"\";\n          pos = spPos;\n          continue;\n        }\n\n        //console.log(33, [eqPos]);\n        attrName = chunk.slice(pos, eqPos);\n        //console.log(331, [attrName]);\n\n        valStart = chunk[eqPos + 1];\n        //console.log(332, [valStart]);\n\n        //if attribute value is start with quote\n        if (valStart === '\"' || valStart === \"'\") {\n          valEndPos = chunk.indexOf(valStart, eqPos + 2);\n          if (valEndPos < 0) { throw 'ERR:Invalid HTML: [' + chunk + ']'; }\n\n          attrVal =  chunk.slice(eqPos + 2, valEndPos);\n          attr[attrName] =0>attrVal.indexOf(\"&\")?attrVal:attrVal.replace(/&gt;/g,\">\").replace(/&lt;/g,\"<\").replace(/&amp;/g,\"&\").replace(/&quot;/g,'\"'); //INLINE;\n          pos = valEndPos + 1;\n          //console.log(311, [valEndPos, attrName, attrVal]);\n        } else {\n\n          valEndPos = chunk.indexOf(' ', eqPos + 2);\n\n          //when no more attributes\n          if (valEndPos < 0) {\n            attrVal =  chunk.slice(eqPos + 1);\n            attr[attrName] =0>attrVal.indexOf(\"&\")?attrVal:attrVal.replace(/&gt;/g,\">\").replace(/&lt;/g,\"<\").replace(/&amp;/g,\"&\").replace(/&quot;/g,'\"'); //INLINE;\n            //console.log(442, [attrVal]);\n            break;\n\n          } else {\n            attrVal =  chunk.slice(eqPos + 1, valEndPos);\n            attr[attrName] =0>attrVal.indexOf(\"&\")?attrVal:attrVal.replace(/&gt;/g,\">\").replace(/&lt;/g,\"<\").replace(/&amp;/g,\"&\").replace(/&quot;/g,'\"'); //INLINE;\n            //console.log(313, [eqPos, valEndPos, attrVal]);\n            pos = valEndPos;\n          }\n        }\n      }\n\n      tagName = tagName.toLowerCase();\n      if (tagName === 'input' || tagName === 'img') {\n        //http://www.w3.org/TR/html-markup/syntax.html\n        //area, base, br, col, command, embed, hr, img, input, keygen, link, meta, param, source, track, wbr\n        func.openTag(tagName, attr, 1);\n        func.voidTag();\n      } else if (attrName === '/') {\n        func.openTag(tagName, attr);\n        func.closeTag(tagName);\n      } else {\n        func.openTag(tagName, attr);\n      }\n\n    // no attributes\n    } else {\n\n      // self closing, explicit\n      if (chunk.charAt(chunk.length - 1) === '/') {\n        tagName = chunk.slice(0, -1).toLowerCase();\n\n        if (tagName === 'br' || tagName === 'hr') {\n          func.openTag(tagName, attr, 1);\n          func.voidTag();\n        } else {\n          func.openTag(tagName, attr);\n          func.closeTag(tagName);\n        }\n      } else {\n        tagName = chunk.toLowerCase();\n\n        // self closing, implicit\n        if (tagName === 'br' || tagName === 'hr') {\n          func.openTag(tagName, attr, 1);\n          func.voidTag();\n        } else {\n          func.openTag(tagName, attr);\n        }\n      }\n    }\n\n  }\n\n  var events = ' scroll change click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste ';\n  var valid_chr = '_$abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n  // minimal stripped down html parser\n  function parseHTML(html, func) {\n    if (!html) { return; }\n    var prevPos = 0, pos = html.indexOf('<');\n    do {\n      if (html.charAt(pos) === '<') {\n        pos++;\n        if (html.charAt(pos) === '/') {\n          prevPos = ++pos;\n          pos = html.indexOf('>', prevPos);\n          //close tag must be like </div>, but not <div />\n          // console.log(['closetag', prevPos, pos, html.substring(prevPos, pos)])\n          func.closeTag(html.substring(prevPos, pos));\n        } else if (html.charAt(pos) === '!') {\n          prevPos = pos;\n          pos = html.indexOf('>', prevPos);\n          // console.log(['comment', prevPos, pos, html.substring(prevPos, pos)])\n          func.comment(html.substring(prevPos, pos));\n        } else {\n          prevPos = pos;\n          pos = html.indexOf('>', prevPos);\n          // console.log(['opentag', prevPos, pos, html.substring(prevPos, pos), parseAttr(html.substring(prevPos, pos))])\n          // func.openTag.apply(this, parseAttr(html.substring(prevPos, pos)));\n          parseAttr(html.substring(prevPos, pos), func);\n        }\n      } else if (html.charAt(pos) === '>') { //&& html.charAt(pos + 1) !== '<'\n        prevPos = ++pos;\n        pos = html.indexOf('<', prevPos);\n        if (pos > prevPos) {\n          // console.log(['text', prevPos, pos, html.substring(prevPos, pos)])\n          func.text(html.substring(prevPos, pos));\n        }\n      } else {\n        console.error('Parse ERR?', [prevPos, pos, html.substring(prevPos, pos), html.slice(pos)]);\n        break;\n      }\n\n    } while (pos > 0);\n  }\n\n  //diff and patch dom with exact same structure\n  function diffPatchExact(prevKey, html2) {\n    var html1 = doTA.H[prevKey];\n    var prevPos1 = 0, pos1 = html1.indexOf('<');\n    var prevPos2 = 0, pos2 = html2.indexOf('<');\n    var tagId = '', elem, part1, part2;\n    var posx, endPosx;\n\n    do {\n      if (html1.charAt(pos1) === \"<\") {\n        pos1++;\n        pos2++;\n        if (html1.charAt(pos1) === \"/\" || html1.charAt(pos1) === \"!\") {\n          //don't patch comment node and close tag.\n          pos1 = html1.indexOf('>', pos1);\n          pos2 = html2.indexOf('>', pos2);\n        } else {\n          prevPos1 = pos1;\n          prevPos2 = pos2;\n          pos1 = html1.indexOf('>', prevPos1);\n          pos2 = html2.indexOf('>', prevPos2);\n          part1 = html1.substring(prevPos1, pos1);\n          part2 = html2.substring(prevPos2, pos2);\n          //attributes\n          if (part1 !== part2) {\n            // console.log('openTag', [part1, part2])\n            tagId = parsePatchAttr(part1, part2);\n          } else {\n            //record id\n            //tagId = getTagId(part1);\n            posx = part1.indexOf(' id=\"');\n            0 <= posx && (posx += 5, endPosx = part1.indexOf('\"', posx), tagId = part1.substring(posx, endPosx));\n          }\n        }\n\n      //text node\n      } else if (html1.charAt(pos1) === '>') {\n        prevPos1 = ++pos1;\n        prevPos2 = ++pos2;\n\n        pos1 = html1.indexOf('<', prevPos1);\n        pos2 = html2.indexOf('<', prevPos2);\n        //textNode, only support firstChild here\n        if (pos2 > prevPos2) {\n          var text1 = html1.substring(prevPos1, pos1);\n          var text2 = html2.substring(prevPos2, pos2);\n          if (text1 !== text2) {\n            elem = document.getElementById(tagId);\n            if (elem) {\n              if (elem.firstChild && elem.firstChild.nodeType === 3) {\n                // console.log('textApplied', [text1, text2]);\n                elem.firstChild.nodeValue = text2;\n              } //else to log something?\n            } else {\n              console.log('tag not found', [tagId]);\n            }\n          }\n        }\n\n      }\n\n    } while(pos1 > 0);\n  }\n\n  // find position of outerHTML end\n  // this function will be inline during building\n  function getOuterHTMLEnd(HTML, START_POS) {\n    var LVL = 1, POS = START_POS;\n    for(;;) {\n      POS = HTML.indexOf('>', POS);\n      if (HTML.charAt(POS - 1) === '/') { //self closing\n        LVL--;\n        if (LVL <= 0) break;\n      }\n      POS = HTML.indexOf('<', POS);\n      if (HTML.charAt(POS + 1) === '/') {\n        LVL--;\n        if (LVL <= 0) {\n          POS = HTML.indexOf('>', POS + 2);\n          break;\n        }\n      } else if (HTML.charAt(POS + 1) !== '!') {\n        LVL++;\n      }\n      // console.log('LVL', LVL);\n    }\n\n    // console.log('getOutHTML', tagName, [tagName, pos2, pos2, ])\n    return ++POS;\n  }\n\n  // FlatDOM: diff html as text and patch dom nodes\n  function diff2(prevKey, html2) {\n    var html1 = doTA.H[prevKey];\n    var prevPos1 = 0, pos1 = html1.indexOf('<');\n    var prevPos2 = 0, pos2 = html2.indexOf('<');\n    var tagId1, tagId2, elem1, part1, part2;\n    // var tagNo1 = 0, tagNo2 = 0;\n    var newNode = document.createElement('div');\n    var tagStartPos1, tagStartPos2;\n    var LVL; //this is needed for fnInline\n    // console.log(html1);\n    // console.log(html2);\n\n    for (;;) {\n      // console.log('before', [dirty1, dirty2], [tagId1, tagId2], [html1.substr(pos1, 20), html2.substr(pos2, 20)]);\n\n      if (pos1 >= 0) {\n        pos1 = html1.indexOf(' id=\"', pos1);\n        if (pos1 > 0) {\n          prevPos1 = pos1 + 5;\n          pos1 = html1.indexOf('\"', prevPos1);\n          tagId1 = html1.substring(prevPos1, pos1);\n          // tagNo1 = tagId1^0;\n        }\n      }\n\n      // console.log('middle', [tagId1, tagId2], [html1.substr(pos1, 20), html2.substr(pos2, 20)]);\n\n      if (pos2 >= 0) {\n        pos2 = html2.indexOf(' id=\"', pos2);\n        if (pos2 > 0) {\n          prevPos2 = pos2 + 5;\n          pos2 = html2.indexOf('\"', prevPos2);\n          tagId2 = html2.substring(prevPos2, pos2);\n          // tagNo2 = tagId2^0;\n        }\n      }\n\n      // console.log('after', [dirty1, dirty2], [tagId1, tagId2],\n      //   [pos1, pos2], [html1.substr(pos1, 20), html2.substr(pos2, 20)]);\n\n      //exist inifite loop\n      if (pos1 < 0 || pos2 < 0) break;\n\n      //same node\n      if (tagId1 === tagId2) {\n        tagStartPos1 = ++pos1;\n        pos1 = html1.indexOf('>', pos1);\n        part1 = html1.substring(tagStartPos1, pos1);\n\n        tagStartPos2 = ++pos2;\n        pos2 = html2.indexOf('>', pos2);\n        part2 = html2.substring(tagStartPos2, pos2);\n\n        // console.log('same node', [part1, part2]);\n\n        //attr really different\n        if (part1 !== part2) {\n          elem1 = document.getElementById(tagId1);\n          if (elem1) {\n            //nodes to be inserted or deleted\n            if ((part1.substr(1, 6) === 'hidden') !== (part2.substr(1, 6) === 'hidden')) {\n              tagStartPos2 = html2.lastIndexOf('<', pos2 - 6);\n              LVL=1,pos2=tagStartPos2;for(;;){pos2=html2.indexOf(\">\",pos2);if(\"/\"===html2.charAt(pos2-1)&&(LVL--,0>=LVL))break;pos2=html2.indexOf(\"<\",pos2);if(\"/\"===html2.charAt(pos2+1)){if(LVL--,0>=LVL){pos2=html2.indexOf(\">\",pos2+2);break}}else\"!\"!==html2.charAt(pos2+1)&&LVL++}pos2++; //INLINE\n              newNode.innerHTML = html2.substring(tagStartPos2, pos2);\n\n              // tagStartPos1 = html1.lastIndexOf('<', pos1 - 6);\n              // console.warn('replaceChild', [tagId2, tagId1], [\n              //   html2.substring(tagStartPos2, getOuterHTMLEnd(html2, tagStartPos2)),\n              //   html1.substring(tagStartPos1, getOuterHTMLEnd(html1, pos1))]);\n\n              elem1.parentNode.replaceChild(newNode.firstChild, elem1);\n\n              LVL=1,pos1=pos1;for(;;){pos1=html1.indexOf(\">\",pos1);if(\"/\"===html1.charAt(pos1-1)&&(LVL--,0>=LVL))break;pos1=html1.indexOf(\"<\",pos1);if(\"/\"===html1.charAt(pos1+1)){if(LVL--,0>=LVL){pos1=html1.indexOf(\">\",pos1+2);break}}else\"!\"!==html1.charAt(pos1+1)&&LVL++}pos1++; //INLINE\n\n            //only attribute changes\n            } else {\n              parsePatchAttr(part1, part2, elem1);\n              // console.warn('patch node', [tagId1, tagId2], [pos1, pos2], [tagStartPos1, tagStartPos2], [part1, part2])\n            }\n          } else {\n            console.error('elem not found', [tagId1, tagId2], [part1, part2]);\n            return;\n          }\n        } else {\n          //clear node for textNode\n          elem1 = void 0;\n        }\n\n        //if blank text node, skip early\n        if (html1.charAt(pos1 + 1) === '<' && html2.charAt(pos2 + 1) === '<') {\n          pos1++, pos2++;\n          continue;\n        }\n\n        prevPos1 = pos1;\n        pos1 = html1.indexOf('<', prevPos1);\n        part1 = html1.substring(prevPos1 + 1, pos1);\n        prevPos2 = pos2;\n        pos2 = html2.indexOf('<', prevPos2);\n        part2 = html2.substring(prevPos2 + 1, pos2);\n\n        //for text node really diff\n        if (part1 !== part2) {\n          // console.log('text diff', [tagId1, tagId2], [part1, part2]);\n          if (!elem1) {\n            elem1 = document.getElementById(tagId1);\n            if (!elem1) {\n              console.error('node not found', [tagId1, tagId2], [part1, part2], [html1.substr(pos1, 15), html2.substr(pos2, 15)], [html1, html2]);\n              return;\n            }\n          }\n          // console.log('part1,2', [part1, part2]);\n          if (elem1.firstChild) {\n            //overwrite textNode value\n            if (elem1.firstChild.nodeType === 3) {\n              elem1.firstChild.nodeValue = part2;\n              // console.warn('textNode overwritten', elem1, elem1.firstChild)\n\n            //not textNode, so, insertBefore\n            } else {\n              elem1.insertBefore(document.createTextNode(part2), elem1.firstChild);\n              // console.warn('textNode inserted', elem1, elem1.firstChild)\n            }\n\n          //no childNodes, so append one\n          } else {\n            elem1.appendChild(document.createTextNode(part2));\n          }\n        }\n      } else {\n        console.error(\"different Id - not supported for now!\", [tagId1, tagId2]);\n        return;\n      }\n\n    } //infinite loop\n\n  }\n\n  var newNode = typeof document !== 'undefined' && document.createElement('div');\n  var html1, part1, part2, elem1;\n  var logger;\n\n  // diff3: no place holder nodes\n  function diff3(prevKey, html2) {\n    html1 = doTA.H[prevKey];\n    var prevPos1, lastPos1, pos1 = html1.indexOf('<');\n    var prevPos2, lastPos2, pos2 = html2.indexOf('<');\n    var tagId1, tagId2, prevTagId1, prevTagId2;\n    var tagNo1, tagNo2, subNo1, subNo2, dotPos1, dotPos2;\n    var tagStartPos1, tagStartPos2;\n    var LVL; //this is needed for fnInline\n    // console.log(html1);\n    // console.log(html2);\n    // logger = [];\n\n    for (;;) {\n      // console.log('before', [dirty1, dirty2], [tagId1, tagId2], [html1.substr(pos1, 20), html2.substr(pos2, 20)]);\n\n      if (pos1 >= 0) {\n        lastPos1 = pos1;\n        pos1 = html1.indexOf(' id=\"', pos1);\n        if (pos1 > 0) {\n          prevPos1 = pos1 + 5;\n          pos1 = html1.indexOf('\"', prevPos1);\n          prevTagId1 = tagId1;\n          tagId1 = html1.substring(prevPos1, pos1);\n        }\n      }\n\n      // console.log('middle', [tagId1, tagId2], [html1.substr(pos1, 20), html2.substr(pos2, 20)]);\n\n      if (pos2 >= 0) {\n        lastPos2 = pos2;\n        pos2 = html2.indexOf(' id=\"', pos2);\n        if (pos2 > 0) {\n          prevPos2 = pos2 + 5;\n          pos2 = html2.indexOf('\"', prevPos2);\n          prevTagId2 = tagId2;\n          tagId2 = html2.substring(prevPos2, pos2);\n        }\n      }\n\n      // console.log('after', [dirty1, dirty2], [tagId1, tagId2],\n      //   [pos1, pos2], [html1.substr(pos1, 20), html2.substr(pos2, 20)]);\n\n      //exist inifite loop\n      if (pos1 < 0 && pos2 < 0) break;\n\n      //same node\n      if (tagId1 === tagId2) {\n        tagStartPos1 = ++pos1;\n        pos1 = html1.indexOf('>', pos1);\n        part1 = html1.substring(tagStartPos1, pos1);\n\n        tagStartPos2 = ++pos2;\n        pos2 = html2.indexOf('>', pos2);\n        part2 = html2.substring(tagStartPos2, pos2);\n\n        // console.log('same node', [part1, part2]);\n\n        //attr really different\n        if (part1 !== part2) {\n          elem1 = document.getElementById(tagId1);\n          if (elem1) {\n            //nodes to be inserted or deleted\n            if ((part1.substr(1, 6) === 'hidden') !== (part2.substr(1, 6) === 'hidden')) {\n              tagStartPos2 = html2.lastIndexOf('<', pos2 - 6);\n              LVL=1,pos2=tagStartPos2;for(;;){pos2=html2.indexOf(\">\",pos2);if(\"/\"===html2.charAt(pos2-1)&&(LVL--,0>=LVL))break;pos2=html2.indexOf(\"<\",pos2);if(\"/\"===html2.charAt(pos2+1)){if(LVL--,0>=LVL){pos2=html2.indexOf(\">\",pos2+2);break}}else\"!\"!==html2.charAt(pos2+1)&&LVL++}pos2++; //INLINE\n              newNode.innerHTML = html2.substring(tagStartPos2, pos2);\n\n              // tagStartPos1 = html1.lastIndexOf('<', pos1 - 6);\n              // console.warn('replaceChild', [tagId2, tagId1], [\n              //   html2.substring(tagStartPos2, getOuterHTMLEnd(html2, tagStartPos2)),\n              //   html1.substring(tagStartPos1, getOuterHTMLEnd(html1, pos1))]);\n\n              elem1.parentNode.replaceChild(newNode.firstChild, elem1);\n\n              LVL=1,pos1=pos1;for(;;){pos1=html1.indexOf(\">\",pos1);if(\"/\"===html1.charAt(pos1-1)&&(LVL--,0>=LVL))break;pos1=html1.indexOf(\"<\",pos1);if(\"/\"===html1.charAt(pos1+1)){if(LVL--,0>=LVL){pos1=html1.indexOf(\">\",pos1+2);break}}else\"!\"!==html1.charAt(pos1+1)&&LVL++}pos1++; //INLINE\n\n            //only attribute changes\n            } else {\n              parsePatchAttr(part1, part2, elem1);\n              // console.warn('patch node', [tagId1, tagId2], [pos1, pos2], [tagStartPos1, tagStartPos2], [part1, part2])\n            }\n          } else {\n            console.error('elem not found', [tagId1, tagId2], [part1, part2]);\n            return;\n          }\n        } else {\n          //clear node for textNode\n          elem1 = void 0;\n        }\n\n        //if blank text node, skip early\n        if (html1.charAt(pos1 + 1) === '<' && html2.charAt(pos2 + 1) === '<') {\n          pos1++, pos2++;\n          continue;\n        }\n\n        prevPos1 = pos1;\n        pos1 = html1.indexOf('<', prevPos1);\n        part1 = html1.substring(prevPos1 + 1, pos1);\n        prevPos2 = pos2;\n        pos2 = html2.indexOf('<', prevPos2);\n        part2 = html2.substring(prevPos2 + 1, pos2);\n\n        //for text node really diff\n        if (part1 !== part2) {\n          // console.log('text diff', [tagId1, tagId2], [part1, part2]);\n          if (!elem1) {\n            elem1 = document.getElementById(tagId1);\n            if (!elem1) {\n              console.error('node not found', [tagId1, tagId2], [part1, part2], [html1.substr(pos1, 15), html2.substr(pos2, 15)], [html1, html2]);\n              return;\n            }\n          }\n          // console.log('part1,2', [part1, part2]);\n          if (elem1.firstChild) {\n            //overwrite textNode value\n            if (elem1.firstChild.nodeType === 3) {\n              elem1.firstChild.nodeValue = part2;\n              // console.warn('textNode overwritten', elem1, elem1.firstChild)\n\n            //not textNode, so, insertBefore\n            } else {\n              elem1.insertBefore(document.createTextNode(part2), elem1.firstChild);\n              // console.warn('textNode inserted', elem1, elem1.firstChild)\n            }\n\n          //no childNodes, so append one\n          } else {\n            elem1.appendChild(document.createTextNode(part2));\n          }\n        }\n\n\n      //when id is different\n      } else {\n\n        dotPos1 = tagId1.indexOf('.');\n        tagNo1 = tagId1.slice(0, dotPos1) ^ 0;\n        dotPos2 = tagId1.indexOf('.', ++dotPos1);\n        subNo1 = dotPos2 > 0 && tagId1.slice(dotPos1, dotPos2) ^ 0;\n\n        dotPos2 = tagId2.indexOf('.');\n        tagNo2 = tagId2.slice(0, dotPos2) ^ 0;\n        dotPos1 = tagId2.indexOf('.', ++dotPos2);\n        subNo2 = dotPos1 > 0 && tagId2.slice(dotPos2, dotPos1) ^ 0;\n\n        if (prevTagId1 === prevTagId2 && pos1 > 0 && pos2 > 0) {\n\n          //[\"6.1\", \"5.7.1\"] [\"5.6.1\", \"5.6.1\"]\n          if (tagNo1 > tagNo2) {\n            elem1 = document.getElementById(prevTagId2);\n            if (!elem1) {\n              console.warn([\"no existing node 5\", [tagId1, tagId2], [prevTagId1, prevTagId2], [pos1, pos2]]);\n            } else {\n              tagStartPos2 = html2.lastIndexOf('<', pos2 - 6);\n              LVL=1,pos2=tagStartPos2;for(;;){pos2=html2.indexOf(\">\",pos2);if(\"/\"===html2.charAt(pos2-1)&&(LVL--,0>=LVL))break;pos2=html2.indexOf(\"<\",pos2);if(\"/\"===html2.charAt(pos2+1)){if(LVL--,0>=LVL){pos2=html2.indexOf(\">\",pos2+2);break}}else\"!\"!==html2.charAt(pos2+1)&&LVL++}pos2++; //INLINE\n              newNode.innerHTML = html2.substring(tagStartPos2, pos2);\n\n              //huge scroll - hack\n              if (tagId2.length - prevTagId2.length >= 2) {\n                elem1.appendChild(newNode.firstChild);\n                // logger.push([\"this.appendChild\", [tagId1, tagId2], [prevTagId1, prevTagId2], [html2.substring(tagStartPos2, pos2)]]);\n              } else {\n                // if (elem1.nextSibling) {\n                //   elem1.parentNode.insertBefore(newNode.firstChild, elem1.nextSibling);\n                //   // logger.push([\"parent.insertBefore[first]\", [tagId1, tagId2], [prevTagId1, prevTagId2], [html2.substring(tagStartPos2, pos2)]]);\n                // } else {\n                  elem1.parentNode.appendChild(newNode.firstChild);\n                  // logger.push([\"parent.appendChild[first]\", [tagId1, tagId2], [prevTagId1, prevTagId2], [html2.substring(tagStartPos2, pos2)]]);\n                // }\n              }\n              pos1 = lastPos1;\n              tagId1 = prevTagId1;\n              tagId2 = prevTagId2;\n              continue;\n            }\n\n          // [5, 6] [24, false] [\"5.24.1\", \"6.1\"] [\"5.23.1\", \"5.23.1\"] [673, 770]\n          } else if (tagNo1 < tagNo2) {\n            elem1 = document.getElementById(tagId1);\n            if (!elem1) {\n              console.warn([\"no existing node 4\", [tagId1, tagId2], [prevTagId1, prevTagId2], [pos1, pos2]]);\n            } else {\n              elem1.parentNode.removeChild(elem1);\n              if (pos1 > 0) {\n                LVL=1,pos1=pos1;for(;;){pos1=html1.indexOf(\">\",pos1);if(\"/\"===html1.charAt(pos1-1)&&(LVL--,0>=LVL))break;pos1=html1.indexOf(\"<\",pos1);if(\"/\"===html1.charAt(pos1+1)){if(LVL--,0>=LVL){pos1=html1.indexOf(\">\",pos1+2);break}}else\"!\"!==html1.charAt(pos1+1)&&LVL++}pos1++; //INLINE\n              }\n              // logger.push([\"removeChild[first]\", tagId1, [tagId1, tagId2], [prevTagId1, prevTagId2], [html2.substring(tagStartPos2, pos2)]]);\n              pos2 = lastPos2;\n              tagId1 = prevTagId1;\n              tagId2 = prevTagId2;\n              continue;\n            }\n          }\n\n\n\n          //same level\n          if (tagNo1 === tagNo2) {\n\n            // [5, 5] [1, 2] [\"5.1.1\", \"5.2.1\"] [\"5.1\", \"5.1\"] [229, 227]\n            if ( subNo1 < subNo2 ) {\n              elem1 = document.getElementById(tagId1);\n              if (!elem1) {\n                console.warn([\"no existing node 4\", [tagId1, tagId2], [prevTagId1, prevTagId2], [pos1, pos2]]);\n              } else {\n                elem1.parentNode.removeChild(elem1);\n                if (pos1 > 0) {\n                  LVL=1,pos1=pos1;for(;;){pos1=html1.indexOf(\">\",pos1);if(\"/\"===html1.charAt(pos1-1)&&(LVL--,0>=LVL))break;pos1=html1.indexOf(\"<\",pos1);if(\"/\"===html1.charAt(pos1+1)){if(LVL--,0>=LVL){pos1=html1.indexOf(\">\",pos1+2);break}}else\"!\"!==html1.charAt(pos1+1)&&LVL++}pos1++; //INLINE\n                }\n                // logger.push([\"removeChild[backward.last]\", tagId1, [tagId1, tagId2], [prevTagId1, prevTagId2], [html2.substring(tagStartPos2, pos2)]]);\n                pos2 = lastPos2;\n                tagId1 = prevTagId1;\n                tagId2 = prevTagId2;\n                continue;\n              }\n\n            //[5, 5] [19, 18] [\"5.19.1\", \"5.18.1\"] [\"5.1\", \"5.1\"] [229, 231]\n            } else if ( subNo1 > subNo2 ) {\n              elem1 = document.getElementById(tagId1);\n\n              tagStartPos2 = html2.lastIndexOf('<', pos2 - 6);\n              LVL=1,pos2=tagStartPos2;for(;;){pos2=html2.indexOf(\">\",pos2);if(\"/\"===html2.charAt(pos2-1)&&(LVL--,0>=LVL))break;pos2=html2.indexOf(\"<\",pos2);if(\"/\"===html2.charAt(pos2+1)){if(LVL--,0>=LVL){pos2=html2.indexOf(\">\",pos2+2);break}}else\"!\"!==html2.charAt(pos2+1)&&LVL++}pos2++; //INLINE\n              newNode.innerHTML = html2.substring(tagStartPos2, pos2);\n\n              elem1.parentNode.insertBefore(newNode.firstChild, elem1);\n              // if (elem1.firstChild) {\n              //   elem1.insertBefore(newNode.firstChild, elem1.firstChild);\n              //   // logger.push([\"this.insertBefore[firstChild]\", [tagId1, tagId2], [prevTagId1, prevTagId2], [pos1, pos2], [html2.substring(tagStartPos2, pos2)]]);\n              // } else {\n              //   elem1.appendChild(newNode.firstChild);\n              //   // logger.push([\"this.appendChild[firstChild]\", [tagId1, tagId2], [prevTagId1, prevTagId2], [pos1, pos2], [html2.substring(tagStartPos2, pos2)]]);\n              // }\n\n              pos1 = lastPos1;\n              tagId1 = prevTagId1;\n              tagId2 = prevTagId2; //check later\n              continue;\n            }\n\n          } //same parent\n\n        } //prevTagId1 === prevTagId2\n\n\n\n        if (pos1 < 0) {\n\n          // [\"28.9.1\", \"28.10.1\"] [\"28.8.1\", \"28.9.1\"] [-1, 16911]\n          if ( tagNo1 === tagNo2 && subNo1 < subNo2 ) {\n            elem1 = document.getElementById(prevTagId2);\n\n            tagStartPos2 = html2.lastIndexOf('<', pos2 - 6);\n            LVL=1,pos2=tagStartPos2;for(;;){pos2=html2.indexOf(\">\",pos2);if(\"/\"===html2.charAt(pos2-1)&&(LVL--,0>=LVL))break;pos2=html2.indexOf(\"<\",pos2);if(\"/\"===html2.charAt(pos2+1)){if(LVL--,0>=LVL){pos2=html2.indexOf(\">\",pos2+2);break}}else\"!\"!==html2.charAt(pos2+1)&&LVL++}pos2++; //INLINE\n            newNode.innerHTML = html2.substring(tagStartPos2, pos2);\n\n            //huge scroll - hack\n            if (tagId2.length - prevTagId2.length >= 2) {\n              elem1.appendChild(newNode.firstChild);\n              // logger.push([\"this.appendChild\", [tagId1, tagId2], [prevTagId1, prevTagId2], [html2.substring(tagStartPos2, pos2)]]);\n            } else {\n              elem1.parentNode.appendChild(newNode.firstChild);\n              // logger.push([\"appendChild[parent.last]1<0\", [tagId1, tagId2], [subNo1, subNo2], [prevTagId1, prevTagId2], [pos1, pos2], [html2.substring(tagStartPos2, pos2)]]);\n            }\n\n            tagId1 = prevTagId1;\n            tagId2 = prevTagId2;\n            continue;\n          } else {\n            console.warn('not impl1', [tagNo1, tagNo2], [subNo1, subNo2], [tagId1, tagId2], [prevTagId1, prevTagId2], [pos1, pos2], [html2.substring(tagStartPos2, pos2)]);\n          }\n        }\n\n\n        if (pos2 < 0) {\n\n          if (tagNo1 === tagNo2) {\n\n            // [28, 28] [undefined, 13] [\"28.1\", \"28.13.1\"] [\"28.1\", \"28.1\"] [-1, 12127]\n            if (subNo1 < subNo2) {\n              elem1 = document.getElementById(prevTagId2);\n\n              tagStartPos2 = html2.lastIndexOf('<', pos2 - 6);\n              LVL=1,pos2=tagStartPos2;for(;;){pos2=html2.indexOf(\">\",pos2);if(\"/\"===html2.charAt(pos2-1)&&(LVL--,0>=LVL))break;pos2=html2.indexOf(\"<\",pos2);if(\"/\"===html2.charAt(pos2+1)){if(LVL--,0>=LVL){pos2=html2.indexOf(\">\",pos2+2);break}}else\"!\"!==html2.charAt(pos2+1)&&LVL++}pos2++; //INLINE\n              newNode.innerHTML = html2.substring(tagStartPos2, pos2);\n\n              elem1.appendChild(newNode.firstChild);\n              // logger.push([\"appendChild[parent.last]2<0\", [tagId1, tagId2], [prevTagId1, prevTagId2], [pos1, pos2], [html2.substring(tagStartPos2, pos2)]]);\n\n              // pos1 = prevPos1;\n              tagId1 = prevTagId1;\n              tagId2 = prevTagId2;\n              continue;\n\n            //[28, 28] [27, 26] [\"28.27.1\", \"28.26.1\"] [\"28.26.1\", \"28.25.1\"] [12548, -1]\n            } else if (subNo1 > subNo2) {\n\n              elem1 = document.getElementById(tagId1);\n              if (!elem1) {\n                console.warn([\"no existing node 4\", [tagId1, tagId2], [prevTagId1, prevTagId2], [pos1, pos2]]);\n              } else {\n                elem1.parentNode.removeChild(elem1);\n                if (pos1 > 0) {\n                  LVL=1,pos1=pos1;for(;;){pos1=html1.indexOf(\">\",pos1);if(\"/\"===html1.charAt(pos1-1)&&(LVL--,0>=LVL))break;pos1=html1.indexOf(\"<\",pos1);if(\"/\"===html1.charAt(pos1+1)){if(LVL--,0>=LVL){pos1=html1.indexOf(\">\",pos1+2);break}}else\"!\"!==html1.charAt(pos1+1)&&LVL++}pos1++; //INLINE\n                }\n                // logger.push([\"removeChild[backward.last]\", tagId1, [tagId1, tagId2], [prevTagId1, prevTagId2], [html2.substring(tagStartPos2, pos2)]]);\n                // pos2 = lastPos2;\n                tagId1 = prevTagId1;\n                tagId2 = prevTagId2;\n                continue;\n              }\n\n            } else {\n              console.warn('not impl3', [tagNo1, tagNo2], [subNo1, subNo2], [tagId1, tagId2], [prevTagId1, prevTagId2], [pos1, pos2], [html2.substring(tagStartPos2, pos2)]);\n            }\n          }\n        }\n\n\n\n        // console.log('====')\n        // logger.slice(-10).forEach(function(item){\n        //   console.info.apply(console, item)\n        // })\n        console.error(\"different Id - not supported for now!\", [tagNo1, tagNo2], [subNo1, subNo2], [tagId1, tagId2], [prevTagId1, prevTagId2], [pos1, pos2]);\n        console.log([html1.substr(pos1 - 100, 100), html1.substr(pos1, 20)]);\n        console.log([html2.substr(pos2 - 100, 100), html2.substr(pos2, 20)]);\n        // console.log(html1);\n        // console.log(html2)\n        return;\n      }\n\n    } //infinite loop\n\n  }\n\n  var camelCaseRE = /-(.)/g;\n  function camelCase(str) {\n    return str.replace(camelCaseRE, function($0, $1){ return $1.toUpperCase(); });\n  }\n\n  // parse attributes from html open tag and patch DOM when different\n  function parsePatchAttr(chunkA, chunkB, elem) {\n    var tagId;\n    var posA1, posA2, posB1, posB2;\n    var posDiff = 0;\n    var attrName, attrVal1, attrVal2;\n    // var len1 = chunk1.length;\n    // console.log('chunks', [chunkA, chunkB]);\n\n    //extract id to tag, if no elem specified\n    if (!elem) {\n      posA1 = chunkA.indexOf(' id=\"', posA1);\n      if (posA1 >= 0) {\n        posA1 += 5;\n        posA2 = chunkA.indexOf('\"', posA1);\n        tagId = chunkA.slice(posA1, posA2);\n        elem = document.getElementById(tagId);\n        if (!elem) {\n          throw console.error('tag not found', [posA1, posA2, tagId, elem, chunkA, chunkB]);\n        }\n        posA2 += 2;\n      } else {\n        throw console.error('id not found', [posA1, posA1, chunkA, chunkB]);\n      }\n    } else {\n      //first char is always space\n      posA2 = posB2 = 1;\n    }\n\n    for(;;) {\n      //attr name\n      posA1 = chunkA.indexOf('=\"', posA2);\n      if (posA1 < 0) break;\n      attrName = chunkA.slice(posA2, posA1);\n\n      //attr values\n      posA2 = chunkA.indexOf('\"', posA1 + 2);\n      attrVal1 =  chunkA.slice(posA1 + 2, posA2);\n\n      posB1 = posA1 + posDiff;\n      posB2 = chunkB.indexOf('\"', posB1 + 2);\n      attrVal2 =  chunkB.slice(posB1 + 2, posB2);\n\n      if (attrVal1 !== attrVal2) {\n        // console.log('setAttribute', [attrName, attrVal1, attrVal2], [chunk1, chunk2])\n        if (attrName === 'value') {\n          elem[attrName] = attrVal2;\n        } else if (attrName.charAt(0) === '-') {\n          elem[attrName.substr(1)] = attrVal2;\n          // console.log('prop-', attrName.substr(1), attrVal2, elem[attrName.substr(1)]);\n        } else {\n          /*if (attrName === 'class') {\n            elem.className = attrVal2;\n          } else */\n          //IE or Edge can't set dynamic styles\n          // if (msie && attrName === 'style') {\n          //   var prevSCPpos = 0, SCPos = attrVal2.indexOf(';'), aStyle, colonPos;\n          //   while (SCPos > 0) {\n          //     aStyle = attrVal2.slice(prevSCPpos, SCPos);\n          //     colonPos = aStyle.indexOf(':');\n          //     if (colonPos > 0) {\n          //       elem.style[aStyle.substr(0, colonPos).trim()] = aStyle.slice(colonPos+1);\n          //     }\n          //     prevSCPpos = SCPos + 1;\n          //     SCPos = attrVal2.indexOf(';', prevSCPpos);\n          //   }\n          //   if (prevSCPpos < attrVal2.length) {\n          //     aStyle = attrVal2.slice(prevSCPpos);\n          //     colonPos = aStyle.indexOf(':');\n          //     if (colonPos > 0) {\n          //       elem.style[aStyle.substr(0, colonPos).trim()] = aStyle.slice(colonPos+1);\n          //     }\n          //   }\n          //   // forEachArray(attrVal2.match(/[^;]+/g), function(item){\n          //   //   var colonPos = item.indexOf(':');\n          //   //   if (colonPos > 0) {\n          //   //     // console.log('style', [item.substr(0, colonPos).trim(), item.slice(colonPos+1).trim()])\n          //   //     elem.style[item.substr(0, colonPos).trim()] = item.slice(colonPos+1);\n          //   //   }\n          //   // })\n          // } else {\n            elem.setAttribute(attrName, attrVal2);\n          // }\n        }\n        posDiff = posB2 - posA2;\n      }\n\n      posA2 += 2;\n    }\n\n    return tagId;\n  }\n\n  // extract value of id from part of html open tag\n  // only id=\"xxx\" supported, this is internal use, so it's always double-quotes\n  // this function is inlined during building\n  function getTagId(partial, start) {\n    var pos = partial.indexOf(' id=\"', start), endPos;\n    if (pos >= 0) {\n      pos += 5;\n      endPos = partial.indexOf('\"', pos);\n      return partial.substring(pos, endPos);\n    }\n  }\n\n  // split filters into array, take care of | and || as different\n  function splitFilters(input, pos) {\n    var prevPos = 0;\n    var ret = [];\n    while (pos !== -1) {\n      if (input.charAt(pos + 1) === '|') {\n        pos += 2;\n      } else {\n        ret.push(input.substring(prevPos, pos));\n        prevPos = ++pos;\n      }\n      pos = input.indexOf('|', pos);\n    }\n    if (prevPos < input.length) {\n      ret.push(input.substr(prevPos));\n    }\n    return ret;\n  }\n\n  function parseStyle(styleObj) {\n    var ret = '';\n    for (var x in styleObj) {\n      ret += x + ':' + styleObj[x] + ';';\n    }\n    return ret;\n  }\n\n  // ToDo: check compile performance with regex\n  var ngClassRegex = /('[^']+'|\"[^\"]+\"|[\\w$]+)\\s*:\\s*((?:[$.\\w]+|\\([^)]+\\)|[^},])+)/g;\n  var varOrStringRegex = /'[^']*'|\"[^\"]*\"|[\\w$]+|[^\\w$'\"]+/g;\n  var quotedStringRegex = /\"[^\"]*\"|'[^']*'/g;\n  var whiteSpaceRegex = /\\s{2,}|\\n/g;\n  var removeUnneededQuotesRegex = /\\b([\\w_-]+=)\"([^\"'\\s]+)\"(?=[\\s>])/g;\n  var lazyNgAttrRegex = /^(?:src|alt|title|href)/;\n  // https://github.com/kangax/html-minifier/issues/63\n  var noValAttrRegex = /^(?:checked|selected|disabled|readonly|multiple|required|hidden|nowrap)/;\n  var $indexRegex = /\\$index/g;\n  var $parent$indexRegex = /(?:\\$parent\\.)+\\$index/g;\n\n  // exported as doTA.compile\n  function compileHTML(template, options) {\n    options = options || {};\n    var val_mod = options.loose ? \"||''\" : '';\n    var watchDiff = options.watchDiff;\n    var diffLevel = +options.diffLevel;\n    var VarMap = {$index: 1, undefined: 1, $attr: 1,\n      Math: 1, Date: 1, String: 1, Object: 1, Array: 1, Infinity: 1, NaN: 1,\n      // alert: 1, confirm: 1, prompt: 1,\n      var: 1, in: 1,\n      true: 1, false: 1, null: 1, void: 1};\n    var level = 0, ngRepeatLevel;\n    var ngIfLevel, skipLevel, ngIfCounterTmp, ngIfLevels = [], ngIfLevelMap = {};\n    var LevelMap = {}, LevelVarMap = {};\n    var KeyMap = [], keyLevel = 0;\n    var WatchMap = {}, Watched;\n    var doTAPass, doTAContinue;\n    var compiledFn;\n    var uniqueId = this.getId(options.dotaRender);\n    var idHash = {};\n\n    var FnText = indent(level) + \"'use strict';var \" +\n      (watchDiff ? 'M,N=1,' : '') +\n      \"R='';\\n\"; //ToDO: check performance on var declaration\n\n    //clean up extra white spaces and line break\n    template = template.replace(whiteSpaceRegex, ' ');\n\n    if (options.strip) {\n      template = template.replace(/>\\s+/g, '>').replace(/\\s+</g, '<');\n    }\n\n    // when encode is set, find strings and encode < and >, or parser will throw error.\n    if (options.encode) {\n      template = template.replace(quotedStringRegex, function($0) {\n        return $0.replace(/[<>]/g, function($00) {\n          return {'>': '&gt;', '<': '&lt;'}[$00];\n        });\n      });\n    }\n\n    // attach plain variables to scope variables\n    function attachScope(v) {\n      //console.log(VarMap, [v]);\n      if (v) {\n        //var DEBUG = /error/.test(v);\n        //DEBUG && console.log(11, [v]);\n\n        //ToDo: still buggy, this need to improve\n        var vv = '';\n        var matches = v.match(varOrStringRegex);\n        //DEBUG && console.log(12, matches);\n        for(var i = 0; i < matches.length; i++) {\n\n          if (valid_chr.indexOf(matches[i].charAt(0)) >= 0 && !VarMap[matches[i]] &&\n            (!i || matches[i-1][matches[i-1].length-1] !== '.')) {\n            vv += 'S.' + matches[i];\n          } else {\n            if (matches[i].indexOf('$index') >= 0) {\n              //only support last level for now\n              vv += matches[i].replace($indexRegex, LevelVarMap[ngRepeatLevel]);\n            } else {\n              vv += matches[i];\n            }\n          }\n        }\n        //DEBUG && console.log(55, vv);\n        return vv;\n      }\n      return v;\n    }\n\n    // escape single quotes with backslash\n    function escapeSingleQuote(str) {\n      var quotePos = str.indexOf(\"'\");\n      if (quotePos >= 0) {\n        var ret = '';\n        var prevQuotePos = 0;\n        do {\n          ret += str.substring(prevQuotePos, quotePos);\n          //escaped quote\n          if (str.charAt(quotePos - 1) !== '\\\\') {\n            ret += \"\\\\\";\n          }\n          prevQuotePos = quotePos;\n          quotePos = str.indexOf(\"'\", prevQuotePos + 1);\n        } while (quotePos > 0);\n        ret += str.substr(prevQuotePos);\n        return ret;\n      } else {\n        return str;\n      }\n    }\n\n    // interpolation\n    function interpolate(str) {\n      var pos = str.indexOf('{{');\n      if (pos >= 0) {\n        var prevPos = 0;\n        var ret = '';\n        var outsideStr, insideStr;\n        do {\n          outsideStr = str.substring(prevPos, pos);\n          ret += escapeSingleQuote(outsideStr);\n\n          //skip {{\n          prevPos = pos + 2;\n          pos = str.indexOf('}}', prevPos);\n\n          insideStr = str.substring(prevPos, pos);\n          ret += \"'+(\" + attachFilter(insideStr) + val_mod + \")+'\";\n\n          //skip }} for next\n          prevPos = pos + 2;\n          pos = str.indexOf('{{', prevPos);\n        } while (pos > 0);\n\n        //remaining text outside interpolation\n        ret += escapeSingleQuote(str.substr(prevPos));\n        return ret;\n      } else {\n        return escapeSingleQuote(str);\n      }\n    }\n\n    // // interpolation\n    // function interpolateInner(str) {\n    //   var pos = str.indexOf('{{');\n    //   if (pos >= 0) {\n    //     var prevPos = 0;\n    //     var ret = '';\n    //     var outsideStr, insideStr;\n    //     do {\n    //       outsideStr = str.substring(prevPos, pos);\n    //       ret += outsideStr;\n\n    //       //skip {{\n    //       prevPos = pos + 2;\n    //       pos = str.indexOf('}}', prevPos);\n\n    //       insideStr = str.substring(prevPos, pos);\n    //       ret += \"(\" + attachFilter(insideStr) + val_mod + \")\";\n\n    //       //skip }} for next\n    //       prevPos = pos + 2;\n    //       pos = str.indexOf('{{', prevPos);\n    //     } while (pos > 0);\n\n    //     //remaining text outside interpolation\n    //     ret += str.substr(prevPos);\n    //     return ret;\n    //   } else {\n    //     return str;\n    //   }\n    // }\n\n    // attach $filters\n    function attachFilter($1) {\n      //console.log(333,$1);\n      var pos = $1.indexOf('|');\n      if (pos === -1) {\n        return attachScope($1);\n      } else {\n        //ToDo: check this line later\n        var v = splitFilters($1, pos);\n        var val = attachScope(v[0]);\n        var prevColonPos, colonPos;\n        var filter;\n\n        //parse each filters\n        for(var i = 1; i < v.length; i++) {\n          filter = v[i], prevColonPos = 0;\n\n          colonPos = filter.indexOf(':');\n          //filter with params\n          if (colonPos > 0) {\n            val = \"F('\" + filter.slice(prevColonPos, colonPos).trim() + \"')(\" + val;\n            prevColonPos = ++colonPos;\n            colonPos = filter.indexOf(':', prevColonPos);\n            while (colonPos > 0) {\n              val += ',' + attachScope(filter.slice(prevColonPos, colonPos));\n              prevColonPos = ++colonPos;\n              colonPos = filter.indexOf(':', prevColonPos);\n            }\n            val += ',' + attachScope(filter.substr(prevColonPos)) + ')';\n\n          //filter without params\n          } else {\n            val = \"F('\" + filter.trim() + \"')(\" + val + ')';\n          }\n\n        }\n        return val;\n      }\n    }\n\n    function apply$index(attrVal) {\n      var count, tmpRepeatLevel;\n\n      if (attrVal.indexOf('$parent.$index') >= 0) {\n        tmpRepeatLevel = ngRepeatLevel;\n        attrVal = attrVal.replace($parent$indexRegex, function($0) {\n          count = $0.match(/\\$parent/g).length; //may need to rewrite with indexOf\n          while (count>0) {\n            while (tmpRepeatLevel >= 0 && typeof LevelVarMap[--tmpRepeatLevel] === 'undefined') {}\n            --count;\n          }\n          return \"'+\" + LevelVarMap[tmpRepeatLevel] + \"+'\";\n        });\n      }\n      if (attrVal.indexOf('$index') >= 0) {\n        return attrVal.replace($indexRegex, \"'+\" + LevelVarMap[ngRepeatLevel] + \"+'\");\n      }\n      return attrVal;\n    }\n\n    //parse the element\n    parseHTML(template, {\n      //open tag with attributes\n      openTag: function(tagName, attr, selfClosing) {\n        // debug && console.log('openTag', [tagName, attr]);\n        var parsedAttr = {}, customId, tagId, noValAttr = '';\n        var attrName, attrVal, attrSkip, oneTimeBinding, doTAPassThis;\n\n        //skip parsing if dota-pass is specified (interpolation will still be expanded)\n        // https://jsperf.com/hasownproperty-vs-in-vs-undefined/12\n        if (typeof attr['dota-pass'] !== 'undefined') {\n          if (attr['dota-pass'] === 'this') {\n            doTAPass = doTAPassThis = 1;\n          } else {\n            doTAPass = level; doTAContinue = 0;\n          }\n        //re-enable dota parsing\n        } else if (typeof attr['dota-continue'] !== 'undefined') {\n          doTAContinue = level;\n        }\n\n        //unless dota-pass or with dota-continue\n        if (doTAPass === void 0 || doTAContinue) {\n\n          if (diffLevel === 2 && attr.skip) {\n            skipLevel = level;\n            attrSkip = attr.skip;\n            attr.skip = void 0;\n            FnText += indent(level, 1) + 'var O'+ level + '=N+' + attrSkip + '; \\n';\n          }\n\n          //ng-repeat to while/for loop\n          if (attr['ng-repeat']) {\n            //console.log(21,[x], [val]);\n            LevelMap[level] = LevelMap[level] ? LevelMap[level] + 1 : 1;\n            var idx = 'i' + level, l = 'l'+ level;\n            var NG_REPEAT = attr['ng-repeat'];\n            var inPos = NG_REPEAT.indexOf(' in ');\n            var repeatVar = NG_REPEAT.substr(0, inPos), repeatSrc = NG_REPEAT.substr(inPos + 4);\n            var commaPos = repeatVar.indexOf(',');\n            var pipePos = repeatSrc.indexOf('|'), repeatSrcNew;\n            var colonPos, x;\n\n            //store variable name to use for $index later\n            //this is ng-repeat specific, LevelMap[level] is same for ng-if too\n            LevelVarMap[level] = idx;\n            ngRepeatLevel = level;\n\n            if (pipePos > 0) {\n              repeatSrcNew = attachFilter(repeatSrc);\n            } else {\n              colonPos = repeatSrc.indexOf(':');\n              // if (colonPos < 0) {\n                repeatSrcNew = attachScope(repeatSrc);\n              // }\n            }\n\n            // Range: \"i in 1:10\" ==> (for i = 1; i < 10; i++)\n            if (colonPos >= 0) {\n              var start = repeatSrcNew.substr(0, colonPos) || 0, end, step;\n              var anotherColon = repeatSrcNew.indexOf(':', ++colonPos);\n              if (anotherColon > 0) {\n                end = repeatSrcNew.substring(colonPos, anotherColon);\n                step = repeatSrcNew.substr(anotherColon + 1);\n              } else {\n                end = repeatSrcNew.substr(colonPos);\n                step = 1;\n              }\n              // console.log([start, end, step])\n\n              FnText += indent(level, 1) + 'for(var ' +\n                repeatVar + '=' + start + ';' +\n                repeatVar + (step > 0 ? '<' : '>') + end + ';' + repeatVar + '+=' + step + '){\\n';\n              VarMap[repeatVar] = 1;\n\n            // Object: \"k, v in {}\" ==> (for in {})\n            } else if (commaPos > 0) {\n              var key = repeatVar.substr(0, commaPos);\n              var value = repeatVar.substr(commaPos + 1);\n              FnText += indent(level, 1) + 'var ' +\n                value + ',D' + level + '=' + repeatSrcNew + ';\\n';\n              FnText += indent(level, 1) + 'for(var ' + key + ' in D' + level + '){\\n';\n              //                             space is needed for manual uglify  ->  vvv\n              FnText += indent(level) + value + ' = ' + 'D' + level + '[' + key + ']; \\n';\n              VarMap[key] = VarMap[value] = 1;\n\n            // Array: \"k in []\" ==> while loop\n            } else {\n              FnText += indent(level, 1) + 'var ' +\n                repeatVar + ',D' + level + '=' + repeatSrcNew + ','\n                + idx + '=-1,' + l + '=D' + level + '.length;\\n';\n              FnText += indent(level, 1) + 'while(++' + idx + '<' + l + '){\\n';\n              //                        space is needed for manual uglify  ->  vvv\n              FnText += indent(level) + repeatVar + '=D' + level + '[' + idx + ']; \\n';\n              VarMap[repeatVar] = 1;\n            }\n            //remote attribute not to get forwarded to angular\n            attr['ng-repeat'] = void 0;\n          }\n\n          if (diffLevel === 3 && attr.key) {\n            keyLevel = level;\n            KeyMap[level] = 'O' + level;\n            // parsedAttr.key = \"'+O\" + level + \"+'\";\n            attr.key = void 0;\n            FnText += indent(level, 1) + 'var O'+ level + '=N,M=1; \\n';\n          }\n\n          //re-render sub template\n          if (attr.refresh) {\n            customId = 1;\n            oneTimeBinding = attr.refresh.indexOf('::');\n            FnText += indent(level, 2) +\n              (!Watched ? 'var ' + (watchDiff ? '': 'N=1,') + 'T=this;T.W=[];' : '') +\n              'var W={N:N,I:N+\"' + '.' + uniqueId + '\",W:\"' +\n              (oneTimeBinding >=0 ? attr.refresh.substr(oneTimeBinding + 2) + '\",O:1': attr.refresh + '\"') +\n              (attr.compile ? ',C:1' : '') +\n              '};T.W.push(W);\\n';\n            WatchMap[level] = Watched = 1;\n            FnText += indent(level, 2) + 'W.F=function(S,F,$attr,X,N){var R=\"\";\\n';\n            attr.refresh = void 0;\n          }\n\n          if (attr['ng-init']) {\n            var eqPos = attr[\"ng-init\"].indexOf('=');\n            if (eqPos > 0) {\n              var varName = attr[\"ng-init\"].substr(0, eqPos);\n              if (varName.indexOf('.') < 0 && varName.indexOf('[') < 0) {\n                FnText += indent(level) + 'var ' + varName + '=' +\n                  attachScope(attr[\"ng-init\"].substr(eqPos + 1)) + '; \\n';\n                VarMap[varName] = 1;\n              } else {\n                FnText += indent(level) + attachScope(attr[\"ng-init\"]) + '; \\n';\n              }\n            } else {\n              FnText += indent(level) + attachScope(attr[\"ng-init\"]) + '; \\n';\n            }\n            attr['ng-init'] = void 0;\n          }\n\n          //ng-if to javascript if\n          if (attr['ng-if']) {\n            if (diffLevel) {\n              ngIfLevel = level;\n              ngIfLevels.push(level);\n              ngIfLevelMap[level] = 0;\n            }\n            LevelMap[level] = LevelMap[level] ? LevelMap[level] + 1 : 1;\n            FnText += indent(level, 1) + 'if('+ attachScope(attr['ng-if']) +'){\\n';\n            // console.log('ng-if starts here', level);\n            attr['ng-if'] = void 0;\n          }\n\n          if (attr['elif']) {\n            FnText += indent(level, 1) + 'else if('+ attachScope(attr['elif']) +'){\\n';\n            LevelMap[level] = LevelMap[level] ? LevelMap[level] + 1 : 1;\n            attr['elif'] = void 0;\n          }\n\n          if (typeof attr['else'] !== 'undefined' && !watchDiff) {\n            FnText += indent(level, 1) + 'else{\\n';\n            LevelMap[level] = LevelMap[level] ? LevelMap[level] + 1 : 1;\n            attr['else'] = void 0;\n          }\n\n          //remove +''+ from class, for unnecessary string concat\n          if (attr.class) {\n            parsedAttr.class = interpolate(attr.class);\n            attr.class = void 0;\n          }\n\n          if (attr['ng-class']) {\n            var match;\n            var ngScopedClass = attachScope(attr['ng-class']);\n            parsedAttr.class = parsedAttr.class || '';\n            while((match = ngClassRegex.exec(ngScopedClass)) !== null) {\n              parsedAttr.class +=\n                (\"'+(\" + match[2] + '?' +\n                  \"'\" + (parsedAttr.class ? ' ' : '') + match[1].replace(/['\"]/g, '') +\n                  \"':'')+'\");\n            }\n            attr['ng-class'] = void 0;\n          }\n\n          if (attr['ng-show']) {\n            parsedAttr.class = parsedAttr.class || '';\n            parsedAttr.class += \"'+(\" + attachScope(attr['ng-show']) +\n              \"?'':'\" + (parsedAttr.class ? ' ' : '') + \"ng-hide')+'\";\n            attr['ng-show'] = void 0;\n          }\n\n          if (attr['ng-style']) {\n            parsedAttr.style = (attr.style ? attr.style + ';' : '') + interpolate(attr['ng-style']);\n              // \"'+doTA.PS(\" + interpolateInner(attr['ng-style']) + \")+'\";\n            attr['ng-style'] = void 0;\n            attr.style = void 0;\n          }\n\n          if (attr['ng-hide']) {\n            parsedAttr.class = parsedAttr.class || '';\n            parsedAttr.class += \"'+(\" + attachScope(attr['ng-hide']) +\n              \"?'\" + (parsedAttr.class ? ' ' : '') + \"ng-hide':'')+'\";\n            attr['ng-hide'] = void 0;\n          }\n\n          if (options.model && attr['ng-model']) {\n            if (attr['ng-model'].indexOf('$index') >= 0) {\n              parsedAttr['dota-model'] = apply$index(attr['ng-model']);\n            } else {\n              parsedAttr['dota-model'] = attr['ng-model'];\n            }\n            attr['ng-model'] = void 0;\n          }\n\n          if (options.bind && attr['ng-bind']) {\n            if (attr['ng-bind'].indexOf('$index') >= 0) {\n              parsedAttr['dota-bind'] = apply$index(attr['ng-bind']);\n            } else {\n              parsedAttr['dota-bind'] = attr['ng-bind'];\n            }\n            attr['ng-bind'] = void 0;\n          }\n\n          if (attr['ng-value']) {\n            parsedAttr.value = \"'+(\" + attachScope(attr['ng-value']) + \")+'\";\n            attr['ng-value'] = void 0;\n          }\n\n          //some cleanup\n          if (parsedAttr.class) {\n            parsedAttr.class = parsedAttr.class.replace(/\\+''\\+/g, '+');\n          }\n\n          // expand interpolations on attributes, and some more\n          for (x in attr) {\n            attrVal = attr[x];\n            if (attrVal === void 0) { continue; }\n\n            // some ng- attributes\n            if (x.substr(0, 3) === 'ng-') {\n              //some ng-attr are just don't need it here.\n              attrName = x.substr(3);\n              //something like ng-src, ng-href, etc.\n              if (lazyNgAttrRegex.test(attrName)) {\n                x = attrName;\n\n              //convert ng-events to dota-events, to be bind later with native events\n              } else if (options.event && events.indexOf(' ' + attrName + ' ') >= 0) {\n                //add class 'de' for one time querying\n                parsedAttr.class = parsedAttr.class ? 'de ' + parsedAttr.class : 'de';\n                // parsedAttr.de = 1;\n                x = 'de-' + attrName;\n\n              } else if (noValAttrRegex.test(attrName)) {\n                noValAttr += \"'+(\" + attachScope(attrVal) + \"?' \" + attrName + \"=\\\"\\\"':'')+'\";\n                //noValAttr will attach later\n                continue;\n\n              }\n            } else if (x.charAt(0) === '-') {\n              x = '-' + camelCase(x.substr(1));\n              parsedAttr[x] = \"'+(\" + attachScope(attrVal) + \")+'\";\n              continue;\n            }\n\n            //ng-repeat loop variables are not available!\n            // only way to acccess is to use $index like \"data[$index]\"\n            // instead of \"item\" as in \"item in data\"\n            parsedAttr[x] = apply$index(interpolate(attrVal));\n          }\n\n        // pass all attributes to angular, except interpolation and $index\n        } else {\n          if (doTAPassThis) {\n            doTAPass = void 0;\n          }\n          //still expand interpolation even if dota-pass is set\n          for (x in attr) {\n            parsedAttr[x] = apply$index(interpolate(attr[x]));;\n          }\n        }\n\n        //write tag back as string\n        FnText += indent(level) + \"R+='<\" + tagName;\n\n        //make id attr come before anything\n        if (customId || watchDiff) {\n          tagId = idHash[uniqueId + '.' + level] = parsedAttr.id || ( (\n            diffLevel === 3 && keyLevel < level && KeyMap[keyLevel] ?\n            \"'+\" + KeyMap[keyLevel] + \"+'.'+M+++'.\" :\n            \"'+N+++'.\"\n          ) + uniqueId);\n          FnText += ' id=\"' + tagId + '\"';\n          if (parsedAttr.id) {\n            parsedAttr.id = void 0;\n          }\n        }\n\n        //write back attributes\n        for(var k in parsedAttr) {\n          FnText += \" \" + k + '=\"' + parsedAttr[k] + '\"';\n        }\n\n        //attach boolean attributes at last\n        FnText += noValAttr +  (selfClosing ? ' /' : '') + \">';\\n\";\n\n        if (watchDiff) {\n          // FnText += indent(level) + \"N++; \\n\";\n          if (ngIfLevelMap[ngIfLevel] >= 0) {\n            ngIfLevelMap[ngIfLevel]++;\n            // console.log('isPath ngIfCounter', [tagName, ngIfCounter]);\n          }\n        }\n\n        //expand doTA templates with expand=1 option\n        if (attr['dota-render'] && attr.expand) {\n          var attrArray = [];\n          //attach data-X attr, and scope-X attr\n          for(x in attr) {\n            if (!x.indexOf('data-')) {\n              attrArray.push('\"' + x.slice(5) + '\":\"' + attr[x] + '\"');\n            } else if (!x.indexOf('scope-')) {\n              attrArray.push('\"' + x.slice(6) + '\":S[\"' + attr[x] + '\"]');\n            }\n          }\n          FnText += indent(level) + 'var P={' + attrArray.join(',') + '},U=\"' + attr['dota-render'] + '\";\\n';\n          //only expand if renderFn is ready in cache, but not in cache-dom (which unneeded)\n          FnText += indent(level) + 'if(typeof doTA.C[U]!==\"undefined\"&&typeof doTA.D[U]===\"undefined\"){' +\n            'R+=doTA.C[U](S,F,P,X)}; \\n';\n        }\n\n        level++;\n      },\n\n      //void tag no need to write closing tag\n      voidTag: function() {\n        level--;\n\n        if (diffLevel === 2 && level === ngIfLevel && ngIfLevelMap[ngIfLevel] >= 0) {\n          // console.log('ngIfLevelMap1', ngIfLevel, ngIfLevels, ngIfLevelMap);\n          if (ngIfLevelMap[ngIfLevel]) {\n            FnText += indent(level, 1) + \"}else{\" +\n              \"R+='<span id=\\\"'+N+'.\" + uniqueId + '\" hidden=\"\"></span>\\';' +\n              \"N+=\" + ngIfLevelMap[ngIfLevel] + \";}; \\n\";\n          }\n          //save counter\n          ngIfCounterTmp = ngIfLevelMap[ngIfLevel];\n          //clear counter\n          ngIfLevelMap[ngIfLevel] = void 0;\n          //remove last level\n          ngIfLevel = ngIfLevels[--ngIfLevels.length - 1];\n          //add up to previous level\n          if (ngIfLevel) {\n            ngIfLevelMap[ngIfLevel] += ngIfCounterTmp;\n          }\n          // console.log('ngIfLevelMap2', ngIfLevel, ngIfLevels, ngIfLevelMap);\n          if (LevelMap[level] > 0) {\n            LevelMap[level]--;\n          }\n        }\n\n        //close \"if\", \"for\", \"while\" blocks\n        //while is needed because loop and if can be in same tag\n        while (LevelMap[level] > 0) {\n          FnText += indent(level, 1) + '}\\n';\n          LevelMap[level]--;\n        }\n\n        //clear ng-repeat $index\n        if (ngRepeatLevel === level) {\n          LevelVarMap[level] = 0;\n          while (ngRepeatLevel >=0 && typeof LevelVarMap[--ngRepeatLevel] === 'undefined') {}\n        }\n\n        //reset dota-pass when out of scope\n        if (doTAPass >= level) {\n          doTAPass = void 0;\n        }\n      },\n\n      //close tag\n      closeTag: function(tagName) {\n        level--;\n\n        //just write closing tag back\n        FnText += indent(level) + \"R+='</\" + tagName + \">';\\n\";\n\n        if (diffLevel === 3) {\n          if (level === ngIfLevel && ngIfLevelMap[ngIfLevel]) {\n            FnText += indent(level, 1) + \"}else{M+=\" + ngIfLevelMap[ngIfLevel] + '} \\n';\n            if (LevelMap[level] > 0) {\n              LevelMap[level]--;\n            }\n          }\n          if (level === keyLevel) {\n            FnText += indent(level, 1) + 'N=O' + level + '+1; \\n';\n          }\n        }\n\n        //ngIfCounter for most possible uniqueId generation; don't work with loop inside!\n        if (diffLevel === 2 && level === ngIfLevel && ngIfLevelMap[ngIfLevel] >= 0) {\n          // console.log('ngIfLevelMap1', ngIfLevel, ngIfLevels, ngIfLevelMap);\n          if (ngIfLevelMap[ngIfLevel]) {\n            FnText += indent(level, 1) + \"}else{\" +\n              \"R+='<\" + tagName + \" id=\\\"'+N+'.\" + uniqueId + '\" hidden=\"\" ' +\n              (tagName === 'img' || tagName === 'input' || tagName === 'br' || tagName === 'hr' ?\n                '/>' : '></' + tagName + '>')\n              + '\\';' +\n              \"N+=\" + ngIfLevelMap[ngIfLevel] + \"} \\n\";\n          }\n          //save counter\n          ngIfCounterTmp = ngIfLevelMap[ngIfLevel];\n          //clear counter\n          ngIfLevelMap[ngIfLevel] = void 0;\n          //remove last level\n          ngIfLevel = ngIfLevels[--ngIfLevels.length - 1];\n          //add up to previous level\n          if (ngIfLevel) {\n            ngIfLevelMap[ngIfLevel] += ngIfCounterTmp;\n          }\n          // console.log('ngIfLevelMap2', ngIfLevel, ngIfLevels, ngIfLevelMap);\n          if (LevelMap[level] > 0) {\n            LevelMap[level]--;\n          }\n        }\n\n        // console.log('LevelMap1', LevelMap);\n        //close \"if\", \"for\", \"while\" blocks\n        while (LevelMap[level] > 0) {\n          FnText += indent(level, 1) + '}\\n';\n          LevelMap[level]--;\n        }\n        // console.log('LevelMap2', LevelMap);\n\n        if (diffLevel === 2) {\n          if (level === skipLevel) {\n            // console.log('ngIfLevel', [level, skipLevel, ngRepeatLevel])\n            FnText += indent(level, 1) + 'N=O' + level + '; \\n';\n          }\n          if (level === skipLevel) {\n            skipLevel = void 0;\n          }\n        }\n\n        //clear ng-repeat $index\n        if (ngRepeatLevel === level) {\n          LevelVarMap[level] = 0;\n          while (ngRepeatLevel >=0 && typeof LevelVarMap[--ngRepeatLevel] === 'undefined') {}\n        }\n\n        //add blank node if $watch block return nothing, mostly occur with ng-if\n        if (WatchMap[level]) {\n          FnText += indent(level, 1) +\n            \"R=R||('<\" + tagName + ' id=\"' + idHash[uniqueId + '.' + level] +\n            '\" style=\"display:none\"></' + tagName + '>\\');\\n';\n          WatchMap[level] = 0;\n          FnText += indent(level, 2) + 'return R;}; \\n';\n          FnText += indent(level, 2) + 'R+=W.F(S,F,$attr,X,N); \\n';\n        }\n\n        //reset dota-pass when out of scope\n        if (doTAPass >= level) {\n          doTAPass = void 0;\n        }\n      },\n\n      //text node\n      text: function(text) {\n        //console.log([text]);\n        FnText += indent(level) + ('R+=\\'' + interpolate(text) + '\\';\\n')\n          .replace(/\\+''|''\\+/g,'');\n      },\n\n      //comment node\n      comment: function(data) {\n        if (options.comment !== 0) {\n          //console.log(111,[data]);\n          FnText += indent(level) + \"R+='<\" + escapeSingleQuote(data) + \">';\\n\";\n        }\n      }\n    });\n\n    if (watchDiff) {\n      //http://jsperf.com/hasownproperty-vs-in-vs-undefined/87\n      FnText += indent(0) + 'if(X&&typeof doTA.H[' + uniqueId + ']!==\"undefined\"){doTA.diff' + (diffLevel || '') +\n        '(' + uniqueId + ',R)}' +\n        'doTA.H[' + uniqueId + ']=R;\\n';\n    }\n\n    FnText += indent(0) +'return R;\\n';\n\n    //Default Optimization\n    // - concat possible lines for performance\n    FnText = FnText.replace(/;R\\+=/g,'+').replace(/'\\+'/g,'');\n\n    //extra optimization, which might take some more CPU\n    if (options.optimize && !watchDiff) {\n      FnText = FnText.replace(removeUnneededQuotesRegex,'$1$2');\n    }\n\n    //print the whole function if debug\n    if (options.debug) {\n      /**/console.log(FnText);\n    }\n    // console.log(FnText);\n\n    try {\n      //$scope, $filter\n      compiledFn = new Function('S', 'F', '$attr', 'X', FnText);\n      if (Watched) {\n        compiledFn = {W:[], F: compiledFn};\n      }\n    } catch (err) {\n      if (typeof console !== \"undefined\") {\n        /**/console.log(\"doTA compile error:\\n\" + FnText);\n      }\n      throw err;\n    }\n\n    // just for less array usage on heap profiling\n    // but this may trigger GC more\n    FnText = LevelMap = LevelVarMap = VarMap = ngIfLevels = ngIfLevelMap = WatchMap = idHash = void 0;\n    return compiledFn;\n  }\n\n  var compiledHash = {};\n  var lastId = 0;\n\n  function initCompileHash(obj) {\n    for (var x in obj) {\n      compiledHash[x] = obj[x];\n      if (obj[x] > lastId) {\n        lastId = obj[x];\n      }\n    }\n  }\n\n  function getUniqueId(key) {\n    if (key) {\n      if (compiledHash[key]) {\n        return compiledHash[key];\n      } else {\n        compiledHash[key] = lastId;\n        return lastId++;\n      }\n    } else {\n      return lastId++;\n    }\n  }\n\n  var doTAObj = {\n    diff: diffPatchExact,\n    diff2: diff2,\n    diff3: diff3,\n    getId: getUniqueId,\n    initCH: initCompileHash,\n    compile: compileHTML,\n    PS: parseStyle,\n    C: {}, //Cached compiled functions\n    D: {}, //Cached DOM to be used by ngDoTA, needed here to prevent unneccessary rendering\n    H: {} //HashMap for TextDiff\n  };\n\n  //warmup most used functions\n  doTAObj.compile('<div class=\"x {{x}}\" ng-class=\"{x:1}\" ng-repeat=\"x in y\" ng-if=\"x\">x{{x}}</div><!--x-->', {\n    watchDiff: 1, diffLevel: 2});\n\n  return doTAObj;\n})();\n\nif (typeof module !== \"undefined\" && module.exports) {\n  module.exports = doTA;\n//IE8\n} else if (typeof console === \"undefined\") {\n  var noop = function() {};\n  console = {log: noop, time: noop, timeEnd: noop};\n}\n"],"sourceRoot":"/source/"}